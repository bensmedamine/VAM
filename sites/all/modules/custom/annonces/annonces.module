<?php

/**
 * Implements hook_menu().
 */
function annonces_menu() {
  $items['locations-vacances-maroc'] = array(
    'title' => 'Locations vacances au Maroc',
    'page callback' => 'locations_vacances',
    'access callback' => TRUE,
  );

  $items['locations-vacances-maroc/%/%'] = array(
    'page callback' => 'locations_vacances_recherche',
    'access callback' => TRUE,
  );


  $items['deposer-une-annonce'] = array(
    'title' => 'Déposer une annonce',
    'page callback' => 'deposer_annonce',
    'access callback' => TRUE,
  );

  $items['ajax-set-annonce-picture'] = array(
    'page callback' => 'ajax_set_annonce_picture',
    'access callback' => TRUE,
  );

  return $items;
}

/**
 * Implements hook_theme().
 */
function annonces_theme() {
  return array(
    'listing_annonces' => array(
      'template' => 'themes/listing_annonces'
    ),
    'deposer_annonce' => array(
      'template' => 'themes/deposer_annonce'
    ),
  );
}

function locations_vacances($option = array()) {
  global $theme_path;
  
  $breadcrumb = drupal_get_breadcrumb();

  if (empty($breadcrumb[1]))
    $breadcrumb[] = empty($option) ? 'Locations vacances Maroc' : l('Locations vacances Maroc', 'locations-vacances-maroc');
  if (!empty($option['ville']['breadcrumb'])) {
    $breadcrumb[] = 'Villes';
    $breadcrumb[] = $option['ville']['breadcrumb'];
  }
  if (!empty($option['bien']['breadcrumb'])) {
    $breadcrumb[] = 'Logements';
    $breadcrumb[] = $option['bien']['breadcrumb'];
  }
  drupal_set_breadcrumb($breadcrumb);

  drupal_add_css($theme_path . '/css/inner.css');

  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'node')
      ->entityCondition('bundle', 'annonce')
      ->propertyCondition('status', 1)
      ->propertyOrderBy('created', 'DESC')
      ->pager(10);

  if (!empty($option['ville']['tid'])) {
    $query->fieldCondition('field_ville', 'tid', $option['ville']['tid']);
  }
  if (!empty($option['bien']['tid'])) {
    $query->fieldCondition('field_type_du_bien', 'tid', $option['bien']['tid']);
  }

  $entities = $query->execute();

  $nodes = node_load_multiple(@array_keys(@$entities['node']));

  $output = theme('listing_annonces', array('nodes' => $nodes, 'total' => $query->pager['total']));
  $output .= theme('pager', array('tags' => array()));
  return $output;
}

function ajax_set_annonce_picture() {
  // Upload files if any
  if (!empty($_FILES['files']['name']['photo'])) {

    $file = annonce_upload_img('photo', 'public://img_annonces/temp/');

    if ($file) {
      print json_encode(array(
            'fid' => $file->fid,
            'filename' => $file->filename,
            'uri' => $file->uri,
            'error' => 0,
          ));
    }
  }
  else {
    print json_encode(array(
          'error' => 1,
        ));
  }

  die();
}

function annonce_upload_img($file, $savepath) {
  $limits = array();


  $limits['extensions'] = array('jpg jpeg gif png');
  $limits['file_size'] = 2000 * 1024;

  $validators = array(
    'file_validate_extensions' => $limits['extensions'],
    'file_validate_size' => array(
      $limits['file_size']
    ),
  );

  $file = file_save_upload($file, $validators, $savepath);

  return $file;
}

function deposer_annonce() {

  $form = null;

  if (user_is_logged_in()) {
    global $theme_path;

    drupal_add_js($theme_path . '/js/ajaxfileupload.js');
    drupal_add_js($theme_path . '/js/jquery.filestyle.js');
    drupal_add_js($theme_path . '/js/jquery.validate.min.js');
    drupal_add_js($theme_path . '/js/messages_fr.js');
    $js = 'jQuery(function($){

          $("#picture-loader").hide();
          var img_annonces_url = "' . url('sites/default/files/img_annonces/temp/') . '";
          var count_pictures = 0;
          var user_pictures = new Array();

          function set_picture_message(msg){
            $("#picture-message").html(msg);
            return true;
          }

          //prototype.indexOf
          if (!Array.prototype.indexOf) {
            Array.prototype.indexOf = function(elt /*, from*/) {
              var len = this.length;
              var from = Number(arguments[1]) || 0;
              from = (from < 0) ? Math.ceil(from) : Math.floor(from);
              if (from < 0) from += len;
              for (; from < len; from++) {
                if (from in this && this[from] === elt)
                  return from;
              }
              return -1;
            };
          }

          //prototype.unset
          Array.prototype.unset = function(val){
            var index = this.indexOf(val);
            if(index > -1){
              this.splice(index,1);
            }
          }

          $(".supprimer-user-picture").live("click", function(){
              set_picture_message("");
              var html = "<p><img src=\"' . url('sites/default/files/pictures/no_ads_picture.gif') . '\"></p>";
              var alt = $(this).parents("div.photo").find("img").eq(0).attr("alt");
              $(this).parents("div.photo").addClass("empty").html(html);
              if (alt.length) {
                user_pictures.unset(alt);

              }
              if (count_pictures > 0 ) {
                count_pictures--;
              }
              return false;
          });


          //traitement des photos
          $("#edit-photo").live("change", function(){

              var value = $(this).val().toLowerCase();
              var img = value.split("/").pop().toLowerCase();

              //Vérification de l extension
              var ext = value.split(".").pop().toLowerCase();
              var check = ($.inArray(ext, ["gif","png","jpg","jpeg"]) == -1) ? false : true;
              if (!check) {
                set_picture_message("L\'extension de la photo est non valide.");
                return false;
              }

              //Vérification du count
              if(count_pictures > 5) {
                set_picture_message("Le nombre max des images autorisé atteint");
                return false;
              }

              //is picture existe
              var founded = false;
              $(user_pictures).each(function (index, elem) {
                  if(elem == value) {
                    founded = true;
                  }
              });
              if (founded) {
                set_picture_message("La photo existe déjà");
                return false;
              }

              //Ecriture du nom de fichier sur le input
              $(".js-input-for-file").val(value);

              		$("#picture-loader").ajaxStart(function(){
                    $(this).show();
                    set_picture_message("");
                  }).ajaxComplete(function(){
                    $(this).hide();
                  });

                  $.ajaxFileUpload({

                      url:"' . url('ajax-set-annonce-picture') . '",
                      secureuri:false,
                      fileElementId:"edit-photo",
                      dataType: "json",

                      success: function (data) {
                        var photo = JSON.parse(data);
                        if(photo.error == 1) {
                          set_picture_message("Veuillez mettre une photo de type (JPG, JPEG, PNG ou GIF) de 2Mo max");
                          return false;
                        }

                        count_pictures++;
                        user_pictures.push(photo.filename);
                        var uri = photo.uri;
                        var html = "<p><img src=\'"+img_annonces_url+photo.filename+"\' alt=\'"+photo.filename+"\' with=\'131\' height=\'85\'></p>";
                        html += "<input type=\'hidden\' value=\'"+photo.fid+"\' name=\'pictures[]\'>";
                        html += "<a href=\'#\' title=\'Supprimer\' class=\'supprimer-user-picture\'><img src=\"' . url('sites/default/files/pictos/delete.png') . '\" alt=\'Supprimer\'></a>";
                        set_picture_message("");
                        $("#photos-annonces .empty").eq(0).removeClass("empty").html(html);
                      },
                      error: function (data, status, e){
                        set_picture_message("Une erreur est survenue lors du téléchargement");
                      }
                  })

              });

            $("#nouvelle-annonce").validate({
              errorClass: "invalid",
              validClass: "",

              rules: {

                },
              messages: {

               }
            });

            $("#edit-photo").filestyle({
              image: "' . $theme_path . '/images/choose-file.gif",
              imageheight : 35,
              imagewidth : 82,
              width : 250
            });

          });';

    drupal_add_js($js, 'inline');
    $form = drupal_get_form('nouvelle_annonce');
  }

  return theme('deposer_annonce', array('nouvelle_annonce' => $form));
}

/**
 * Implementation of hook_query_TAG_alter
 */
function annonces_query_random_alter($query) {
  $query->orderRandom();
}

/**
 * Annonces sur la crousel de la page d'acceuil
 * @param type $tid
 * @param type $nbr
 * @return type 
 */
function get_annonces_par_ville($tid, $nbr) {

  $query = new EntityFieldQuery();
  $entities = $query->entityCondition('entity_type', 'node')
      ->entityCondition('bundle', 'annonce')
      ->propertyCondition('status', 1)
      ->fieldCondition('field_ville', 'tid', $tid)
      ->addTag('random')
      ->range(0, $nbr)
      ->execute();

  $nodes = node_load_multiple(array_keys($entities['node']));
  return $nodes;
}

/**
 * Les annonces similaire sur la page détails annonces
 * @param type $ville
 * @param type $type_du_bien
 * @param type $nbr
 * @return type 
 */
function get_similar_annonces($ville, $type_du_bien, $nid_to_esc, $nbr = 3) {
  $query = new EntityFieldQuery();
  $entities = $query->entityCondition('entity_type', 'node')
      ->entityCondition('bundle', 'annonce')
      ->propertyCondition('status', 1)
      ->fieldCondition('field_ville', 'tid', $ville)
      ->fieldCondition('field_type_du_bien', 'tid', $type_du_bien)
      ->propertyCondition('nid', $nid_to_esc, '<>')
      ->addTag('random')
      ->range(0, $nbr)
      ->execute();

  $nodes = node_load_multiple(array_keys($entities['node']));
  return $nodes;
}

/**
 * Ajoute 1 sur les view
 * @param type $nid 
 */
function up_nbr_views($nid) {
  db_update('field_data_field_vues')
      ->expression('field_vues_value', 'field_vues_value + :val', array(':val' => 1))
      ->condition('entity_id', $nid)
      ->execute();

  return;
}

/**
 * 
 * @param type $tid
 * @return type 
 */
function get_count_annonces_par_ville($tid) {
  $count = db_query('SELECT COUNT(field_ville_tid) total FROM {field_data_field_ville} WHERE field_ville_tid = :tid', array(':tid' => $tid))
      ->fetch();
  return $count->total;
}

function locations_vacances_taxonomy_redirect() {
  $option = array();
  $term = taxonomy_term_load(arg(2));
  if (isset($term->vocabulary_machine_name)) {
    switch ($term->vocabulary_machine_name) {
      case 'villes':
        $option['ville']['breadcrumb'] = $term->name;
        $option['ville']['tid'] = $term->tid;
        break;
      case 'type_du_bien':
        $option['bien']['breadcrumb'] = $term->name;
        $option['bien']['tid'] = $term->tid;
        break;
    }
  }else
    drupal_not_found();

  return locations_vacances($option);
}

function locations_vacances_recherche() {
  for ($i = 1; $i <= 2; $i++) {
    $term = current(taxonomy_get_term_by_name(str_replace('-', ' ', arg($i))));
    if (isset($term->vocabulary_machine_name)) {
      switch ($term->vocabulary_machine_name) {
        case 'villes':
          $option['ville']['breadcrumb'] = $term->name;
          $option['ville']['tid'] = $term->tid;
          break;
        case 'type_du_bien':
          $option['bien']['breadcrumb'] = $term->name;
          $option['bien']['tid'] = $term->tid;
          break;
      }
    }else
      drupal_not_found();
  }
  drupal_set_title($option['ville']['breadcrumb'] . ' » ' . $option['bien']['breadcrumb']);
  return locations_vacances($option);
}

/**
  Déposer une annonce functions
 *
 */
function nouvelle_annonce() {
  $form = array();
  $form['informations_logement'] = array(
    '#markup' => '<h3>Informations sur le logement</h3>',
  );

  $form['title'] = array(
    '#type' => 'textfield',
    '#title' => ('Titre de l\'annonce'),
    '#size' => 60,
    '#maxlength' => 60,
    '#required' => TRUE,
  );
  $form['photos'] = array(
    '#markup' => '<h3 class="top-20">Photos</h3>',
  );

  $form['photo'] = array(
    '#type' => 'file',
    '#title' => t('Ajouter une photo'),
    '#attributes' => array('class' => array('has-description')),
    '#required' => FALSE,
    '#size' => FALSE,
    '#suffix' => '<img id="picture-loader" src="' . url('sites/default/files/pictos/ajax-loader.gif') . '"><label id="picture-message" class="invalid"></label>',
    '#description' => 'Formats autorisés : JPG, JPEG, PNG ou GIF',
  );

  $form['uploads'] = array(
    '#markup' => '
      <div id="photos-annonces">
          <div id="photo-1" class="photo empty">
            <p><img src="' . url('sites/default/files/pictures/no_ads_picture.gif') . '"></p>
          </div>
          <div id="photo-2" class="photo empty">
            <p><img src="' . url('sites/default/files/pictures/no_ads_picture.gif') . '"></p>
          </div>
          <div id="photo-3" class="photo empty">
            <p><img src="' . url('sites/default/files/pictures/no_ads_picture.gif') . '"></p>
          </div>
          <div id="photo-4" class="photo empty">
            <p><img src="' . url('sites/default/files/pictures/no_ads_picture.gif') . '"></p>
          </div>
          <div id="photo-5" class="photo empty">
            <p><img src="' . url('sites/default/files/pictures/no_ads_picture.gif') . '"></p>
          </div>
          <div id="photo-6" class="photo empty">
            <p><img src="' . url('sites/default/files/pictures/no_ads_picture.gif') . '"></p>
          </div>
      </div>',
  );


  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Envoyé'),
    '#attributes' => array('class' => array('custom-submitt-button top-20')),
  );
  return $form;
}

function nouvelle_annonce_validate($form, &$form_state) {
  
}

function nouvelle_annonce_submit($form, &$form_state) {
  $data = $form_state['values'];
  echo '<pre>';
  print_r($form_state['values']);
  print '<br>';
  print_r($_POST['pictures']);
  echo '</pre>';
  die('DEBUG MODE');
}

function amynoffis($num) {
  // header ("Content-type: image/png");
  $image = imagecreate(150, 15);

  /* $orange = imagecolorallocate($image, 255, 128, 0); // Le fond est orange (car c'est la première couleur)
    $bleu = imagecolorallocate($image, 0, 0, 255);
    $bleuclair = imagecolorallocate($image, 156, 227, 254); */

  $blanc = imagecolorallocate($image, 255, 255, 255);
  $noir = imagecolorallocate($image, 0, 0, 0);



  imagestring($image, 6, 0, 0, $num, $noir);
//imagecolortransparent($image, $orange); // On rend le fond orange transparent

  imagepng($image);
  return TRUE;
}