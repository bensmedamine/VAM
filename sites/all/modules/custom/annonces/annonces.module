<?php

/**
 * Implements hook_menu().
 */
function annonces_menu() {
  $items['locations-vacances-maroc'] = array(
    'title' => 'Locations vacances au Maroc',
    'page callback' => 'locations_vacances',
    'access callback' => TRUE,
  );

  $items['locations-vacances-maroc/%/%'] = array(
    'page callback' => 'locations_vacances_recherche',
    'access callback' => TRUE,
  );


  $items['deposer-une-annonce'] = array(
    'title' => 'Déposer une annonce',
    'page callback' => 'deposer_annonce',
    'access callback' => TRUE,
  );

  $items['ajax-set-annonce-picture'] = array(
    'page callback' => 'ajax_set_annonce_picture',
    'access callback' => TRUE,
  );

  return $items;
}

/**
 * Implements hook_theme().
 */
function annonces_theme() {
  return array(
    'listing_annonces' => array(
      'template' => 'themes/listing_annonces'
    ),
    'deposer_annonce' => array(
      'template' => 'themes/deposer_annonce'
    ),
  );
}

function locations_vacances($option = array()) {
  global $theme_path;

  $breadcrumb = drupal_get_breadcrumb();

  if (empty($breadcrumb[1]))
    $breadcrumb[] = empty($option) ? 'Locations vacances Maroc' : l('Locations vacances Maroc', 'locations-vacances-maroc');
  if (!empty($option['ville']['breadcrumb'])) {
    $breadcrumb[] = 'Villes';
    $breadcrumb[] = $option['ville']['breadcrumb'];
  }
  if (!empty($option['bien']['breadcrumb'])) {
    $breadcrumb[] = 'Logements';
    $breadcrumb[] = $option['bien']['breadcrumb'];
  }
  drupal_set_breadcrumb($breadcrumb);

  drupal_add_css($theme_path . '/css/inner.css');

  $query = new EntityFieldQuery();
  $query->entityCondition('entity_type', 'node')
      ->entityCondition('bundle', 'annonce')
      ->propertyCondition('status', 1)
      ->propertyOrderBy('created', 'DESC')
      ->pager(10);

  if (!empty($option['ville']['tid'])) {
    $query->fieldCondition('field_ville', 'tid', $option['ville']['tid']);
  }
  if (!empty($option['bien']['tid'])) {
    $query->fieldCondition('field_type_du_bien', 'tid', $option['bien']['tid']);
  }

  $entities = $query->execute();

  $nodes = node_load_multiple(@array_keys(@$entities['node']));

  $output = theme('listing_annonces', array('nodes' => $nodes, 'total' => $query->pager['total']));
  $output .= theme('pager', array('tags' => array()));
  return $output;
}

function ajax_set_annonce_picture() {
  // Upload files if any
  if (!empty($_FILES['files']['name']['photo'])) {

    $file = annonce_upload_img('photo', 'public://img_annonces/temp/');

    if ($file) {
      print json_encode(array(
            'fid' => $file->fid,
            'filename' => $file->filename,
            'uri' => $file->uri,
            'error' => 0,
          ));
    }
  }
  else {
    print json_encode(array(
          'error' => 1,
        ));
  }

  die();
}

function annonce_upload_img($file, $savepath) {
  $limits = array();


  $limits['extensions'] = array('jpg jpeg gif png');
  $limits['file_size'] = 2000 * 1024;

  $validators = array(
    'file_validate_extensions' => $limits['extensions'],
    'file_validate_size' => array(
      $limits['file_size']
    ),
  );

  $file = file_save_upload($file, $validators, $savepath);

  return $file;
}

function deposer_annonce() {

  $form = null;

  if (user_is_logged_in()) {
    global $theme_path;

    drupal_add_js($theme_path . '/js/ajaxfileupload.js');
    drupal_add_js($theme_path . '/js/jquery.filestyle.js');
    drupal_add_js($theme_path . '/js/jquery.validate.min.js');
    drupal_add_js($theme_path . '/js/messages_fr.js');

    $js = 'var img_annonces_url = "' . url('sites/default/files/img_annonces/temp/') . '";
           var no_ads_picture = "' . url('sites/default/files/pictures/no_ads_picture.gif') . '";
           var upload_url = "' . url('ajax-set-annonce-picture') . '";
           var delete_png_uri = "' . url('sites/default/files/pictos/delete.png') . '";
           var theme_path = "' . $theme_path . '";
          ';
    drupal_add_js($js, 'inline');
    drupal_add_js(drupal_get_path('module', 'annonces') . '/script.js');
    $form = drupal_get_form('nouvelle_annonce');
  }

  return theme('deposer_annonce', array('nouvelle_annonce' => $form));
}

/**
 * Implementation of hook_query_TAG_alter
 */
function annonces_query_random_alter($query) {
  $query->orderRandom();
}

/**
 * Annonces sur la crousel de la page d'acceuil
 * @param type $tid
 * @param type $nbr
 * @return type
 */
function get_annonces_par_ville($tid, $nbr) {

  $query = new EntityFieldQuery();
  $entities = $query->entityCondition('entity_type', 'node')
      ->entityCondition('bundle', 'annonce')
      ->propertyCondition('status', 1)
      ->fieldCondition('field_ville', 'tid', $tid)
      ->addTag('random')
      ->range(0, $nbr)
      ->execute();

  $nodes = node_load_multiple(array_keys($entities['node']));
  return $nodes;
}

/**
 * Les annonces similaire sur la page détails annonces
 * @param type $ville
 * @param type $type_du_bien
 * @param type $nbr
 * @return type
 */
function get_similar_annonces($ville, $type_du_bien, $nid_to_esc, $nbr = 3) {
  $query = new EntityFieldQuery();
  $entities = $query->entityCondition('entity_type', 'node')
      ->entityCondition('bundle', 'annonce')
      ->propertyCondition('status', 1)
      ->fieldCondition('field_ville', 'tid', $ville)
      ->fieldCondition('field_type_du_bien', 'tid', $type_du_bien)
      ->propertyCondition('nid', $nid_to_esc, '<>')
      ->addTag('random')
      ->range(0, $nbr)
      ->execute();

  $nodes = node_load_multiple(array_keys($entities['node']));
  return $nodes;
}

/**
 * Ajoute 1 sur les view
 * @param type $nid
 */
function up_nbr_views($nid) {
  db_update('field_data_field_vues')
      ->expression('field_vues_value', 'field_vues_value + :val', array(':val' => 1))
      ->condition('entity_id', $nid)
      ->execute();

  return;
}

/**
 *
 * @param type $tid
 * @return type
 */
function get_count_annonces_par_ville($tid) {
  $count = db_query('SELECT COUNT(field_ville_tid) total FROM {field_data_field_ville} WHERE field_ville_tid = :tid', array(':tid' => $tid))
      ->fetch();
  return $count->total;
}

function locations_vacances_taxonomy_redirect() {
  $option = array();
  $term = taxonomy_term_load(arg(2));
  if (isset($term->vocabulary_machine_name)) {
    switch ($term->vocabulary_machine_name) {
      case 'villes':
        $option['ville']['breadcrumb'] = $term->name;
        $option['ville']['tid'] = $term->tid;
        break;
      case 'type_du_bien':
        $option['bien']['breadcrumb'] = $term->name;
        $option['bien']['tid'] = $term->tid;
        break;
    }
  }else
    drupal_not_found();

  return locations_vacances($option);
}

function locations_vacances_recherche() {
  for ($i = 1; $i <= 2; $i++) {
    $term = current(taxonomy_get_term_by_name(str_replace('-', ' ', arg($i))));
    if (isset($term->vocabulary_machine_name)) {
      switch ($term->vocabulary_machine_name) {
        case 'villes':
          $option['ville']['breadcrumb'] = $term->name;
          $option['ville']['tid'] = $term->tid;
          break;
        case 'type_du_bien':
          $option['bien']['breadcrumb'] = $term->name;
          $option['bien']['tid'] = $term->tid;
          break;
      }
    }else
      drupal_not_found();
  }
  drupal_set_title($option['ville']['breadcrumb'] . ' » ' . $option['bien']['breadcrumb']);
  return locations_vacances($option);
}

/**
  Déposer une annonce functions
 *
 */
function nouvelle_annonce() {
  $form = array();
  $form['informations_logement'] = array(
    '#markup' => '<h3>Informations sur le logement</h3>',
  );

  $form['title'] = array(
    '#type' => 'textfield',
    '#title' => ('Titre de l\'annonce'),
    '#size' => 60,
    '#maxlength' => 60,
    '#required' => TRUE,
  );
  $form['photos'] = array(
    '#markup' => '<h3 class="top-20">Photos</h3>',
  );

  $form['photo'] = array(
    '#type' => 'file',
    '#title' => t('Ajouter une photo'),
    '#attributes' => array('class' => array('has-description')),
    '#required' => FALSE,
    '#size' => FALSE,
    '#suffix' => '<img id="picture-loader" src="' . url('sites/default/files/pictos/ajax-loader.gif') . '"><label id="picture-message" class="invalid"></label>',
    '#description' => 'Formats autorisés : JPG, JPEG, PNG ou GIF',
  );

  $form['uploads'] = array(
    '#markup' => '
      <div id="photos-annonces">
          <div id="photo-1" class="photo empty">
            <p><img src="' . url('sites/default/files/pictures/no_ads_picture.gif') . '"></p>
          </div>
          <div id="photo-2" class="photo empty">
            <p><img src="' . url('sites/default/files/pictures/no_ads_picture.gif') . '"></p>
          </div>
          <div id="photo-3" class="photo empty">
            <p><img src="' . url('sites/default/files/pictures/no_ads_picture.gif') . '"></p>
          </div>
          <div id="photo-4" class="photo empty">
            <p><img src="' . url('sites/default/files/pictures/no_ads_picture.gif') . '"></p>
          </div>
          <div id="photo-5" class="photo empty">
            <p><img src="' . url('sites/default/files/pictures/no_ads_picture.gif') . '"></p>
          </div>
          <div id="photo-6" class="photo empty">
            <p><img src="' . url('sites/default/files/pictures/no_ads_picture.gif') . '"></p>
          </div>
      </div>',
  );


  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Envoyé'),
    '#attributes' => array('class' => array('custom-submitt-button top-20')),
  );
  return $form;
}

function nouvelle_annonce_validate($form, &$form_state) {

}

function nouvelle_annonce_submit($form, &$form_state) {
  $data = $form_state['values'];
  echo '<pre>';
  print_r($form_state['values']);
  print '<br>';
  print_r($_POST['pictures']);
  echo '</pre>';
  die('DEBUG MODE');
}

function amynoffis($num) {
  // header ("Content-type: image/png");
  $image = imagecreate(150, 15);

  /* $orange = imagecolorallocate($image, 255, 128, 0); // Le fond est orange (car c'est la première couleur)
    $bleu = imagecolorallocate($image, 0, 0, 255);
    $bleuclair = imagecolorallocate($image, 156, 227, 254); */

  $blanc = imagecolorallocate($image, 255, 255, 255);
  $noir = imagecolorallocate($image, 0, 0, 0);



  imagestring($image, 6, 0, 0, $num, $noir);
//imagecolortransparent($image, $orange); // On rend le fond orange transparent

  imagepng($image);
  return TRUE;
}